package br.com.lunacore.ui;

import java.util.ArrayList;

import com.kotcrab.vis.ui.widget.VisList;
import com.kotcrab.vis.ui.widget.VisScrollPane;
import com.kotcrab.vis.ui.widget.VisTable;
import com.kotcrab.vis.ui.widget.VisTextArea;

public class ConsoleWindow extends VisTable{
	
	volatile VisTextArea area;
	volatile VisList<String> list;
	VisScrollPane pane;
	volatile ArrayList<String> queue;
	int maxLines = 100;
	
	public ConsoleWindow() {
		super();
		queue = new ArrayList<String>();
		area = new VisTextArea();
		area.setReadOnly(true);
		area.getStyle().fontColor.set(0.5f, 0.7f, 1f, 1);
		
		list = new VisList<String>();		
		
		add(pane = new VisScrollPane(area)).grow().pad(10);
		pane.setFlickScroll(false);
		pane.setSmoothScrolling(false);
	}
	
	public VisTextArea getArea() {
		return area;
	}
	
	public synchronized void act(float delta) {
		super.act(delta);

		synchronized (queue) {
			if(queue.size() > 0) {
				for(String s : queue) {
					area.appendText(s);
				}
				queue.clear();
				
				System.out.println("Lines: " + area.getLines() + ", /Ns: " + area.getText().split("\n").length);
				
				if(area.getLines() > maxLines) {
					String[] splat = splitByEnd(area.getText().split("\n"), maxLines);
					
					area.setText("");
					for(String s : splat) {
						area.appendText(s + "\n");
					}
				}
				
				area.setCursorAtTextEnd();
				pane.setScrollPercentY(100);
				pane.layout();
			}
			
			area.setPrefRows(100); 
			
		}
		
	}
	
	private String[] splitByEnd(String[] array, int newSize) {
		if(newSize < array.length) {
			String[] out = new String[newSize];
			
			for(int i = 0; i < newSize; i ++) {
				out[i] = array[array.length - newSize + i];
			}
			return out;
		}
		else return array;
	}
	
	public synchronized void addText(String text) {
		queue.add(text);
	}
}
