package br.com.lunacore.ui;

import java.io.File;
import java.lang.reflect.Field;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;

import javax.tools.JavaCompiler;
import javax.tools.ToolProvider;

import com.badlogic.gdx.files.FileHandle;
import com.badlogic.gdx.utils.Align;
import com.kotcrab.vis.ui.util.InputValidator;
import com.kotcrab.vis.ui.widget.VisLabel;
import com.kotcrab.vis.ui.widget.VisTable;
import com.kotcrab.vis.ui.widget.VisTextField;
import com.kotcrab.vis.ui.widget.VisValidatableTextField;

import br.com.lunacore.Editor;
import br.com.lunacore.UIState;
import br.com.lunacore.lunalire.LireObject;
import br.com.lunacore.lunalire.LireScene;

public class ClassPropertyUI extends VisTable{

	UIState state;
	Class selection;
	
	public ClassPropertyUI(UIState state) {
		super();
		this.state = state;
		construct();
	}
	
	public void construct() {			
		if(selection != null) {
			
			align(Align.topLeft);

			if(LireObject.class.isAssignableFrom(selection)) {
				VisLabel title = new VisLabel("Object");
				add(title).align(Align.top).growX();
			}
			else if(LireScene.class.isAssignableFrom(selection)) {
					VisLabel title = new VisLabel("Scene");
					add(title).align(Align.top).growX();
			}
			else {
				VisLabel title = new VisLabel("Custom class");
				add(title).align(Align.top).growX();
			}
			
			for(Field field : selection.getFields()) {
				row();
				
				add(new VisLabel(field.getName())).pad(5).align(Align.topLeft);
				
				//Float
				if(field.getType().equals(float.class)) {
					VisValidatableTextField val = new VisValidatableTextField(new InputValidator() {
						public boolean validateInput(String input) {
							try {
								Float.parseFloat(input);
								return true;
							}
							catch(Exception e) {
								return false;
							}
						}
					});
					val.setText("0.0");
					add(val).pad(5);
				}
				//Int
				else if(field.getType().equals(int.class)) {
					VisValidatableTextField val = new VisValidatableTextField(new InputValidator() {
						public boolean validateInput(String input) {
							try {
								Float.parseFloat(input);
								return true;
							}
							catch(Exception e) {
								return false;
							}
						}
					});
					val.setText("0.0");
					add(val).pad(5);
				}
				else {
					VisTextField val = new VisTextField();
					val.setDisabled(true);
					val.setText(field.getType().getSimpleName());
					add(val).pad(5).align(Align.topLeft);

				}
			}
					
			add(new VisTable()).grow();
		}
			
			
		
	}
	
	
	public void refresh() {
		clear();
		construct();
	}
	

	public void setClassSelection(Class c) {
		selection = c;
		refresh();
	}
	
}
