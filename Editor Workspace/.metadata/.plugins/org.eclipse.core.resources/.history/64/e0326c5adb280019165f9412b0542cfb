package br.com.lunacore.ui;

import java.util.ArrayList;

import com.kotcrab.vis.ui.widget.VisLabel;
import com.kotcrab.vis.ui.widget.VisScrollPane;
import com.kotcrab.vis.ui.widget.VisTable;
import com.kotcrab.vis.ui.widget.VisTextArea;
import com.kotcrab.vis.ui.widget.VisTextField;

public class ConsoleWindow extends VisTable{
	
	volatile VisTextArea area;
	VisScrollPane pane;
	volatile ArrayList<String> queue;
	int maxLines = 100;
	
	ArrayList<VisTextField> fields;
	
	public ConsoleWindow() {
		super();
		queue = new ArrayList<String>();
		area = new VisTextArea();
		area.setReadOnly(true);
		area.getStyle().fontColor.set(0.5f, 0.7f, 1f, 1);
		
		fields = new ArrayList<VisTextField>();
		
		VisTable inner = new VisTable();
		
		add(pane = new VisScrollPane(inner)).grow().pad(10);
		pane.setFlickScroll(false);
		pane.setSmoothScrolling(false);
		
		VisLabel lbl;
	}
	
	public VisTextArea getArea() {
		return area;
	}
	
	public synchronized void act(float delta) {
		super.act(delta);

		synchronized (queue) {
			if(queue.size() > 0) {
				for(String s : queue) {
					area.appendText(s);
				}
				queue.clear();
				
				area.setPrefRows(area.getLines()); 	
				area.setCursorAtTextEnd();
				pane.setScrollPercentY(100);
				pane.layout();
			}
			
			//area.setPrefRows(100); 
			
		}
		
	}
	
	private String[] splitByEnd(String[] array, int newSize) {
		if(newSize < array.length) {
			String[] out = new String[newSize];
			
			for(int i = 0; i < newSize; i ++) {
				out[i] = array[array.length - newSize + i];
			}
			return out;
		}
		else return array;
	}
	
	public synchronized void addText(String text) {
		queue.add(text);
	}
}
